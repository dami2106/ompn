environment ['boundary', 'water', 'stone']
workshop ['toolshed', 'workbench', 'factory']
primitive ['iron', 'grass', 'wood', 'gold', 'gem']
grabbale: ['iron', 'grass', 'wood', 'gold', 'gem', 'plank', 'stick', 'axe', 'rope', 'bed', 'shears', 'cloth', 'bridge', 'ladder']
nongrabbale: ['boundary', 'water', 'stone', 'toolshed', 'workbench', 'factory']
Start compile...
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2])
SEGMENT:  tensor([16, 17, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1])
SEGMENT:  tensor([10, 16, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2])
SEGMENT:  tensor([11, 20, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3])
SEGMENT:  tensor([ 9, 17, 22, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 18, 23, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2])
SEGMENT:  tensor([ 9, 26, 26, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1])
SEGMENT:  tensor([11, 19, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 13, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2])
SEGMENT:  tensor([19, 20, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 2])
SEGMENT:  tensor([27, 28, 28, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
        1, 1])
SEGMENT:  tensor([ 5, 22, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 3, 3, 3, 3])
SEGMENT:  tensor([13, 15, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2])
SEGMENT:  tensor([17, 22, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 19, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2,
        2, 2, 2, 2, 3, 3, 3, 3, 3])
SEGMENT:  tensor([21, 27, 27, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([ 8, 19, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([15, 18, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 21, 32, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([14, 23, 28, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 1])
SEGMENT:  tensor([12, 29, 30, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 3, 17, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 4, 16, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1])
SEGMENT:  tensor([12, 20, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([17, 21, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1])
SEGMENT:  tensor([ 6, 19, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2])
SEGMENT:  tensor([18, 23, 23, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 18, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 2])
SEGMENT:  tensor([28, 29, 29, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2])
SEGMENT:  tensor([19, 21, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])
SEGMENT:  tensor([12, 23, 23, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 15, 21, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3])
SEGMENT:  tensor([ 5, 15, 23, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 1])
SEGMENT:  tensor([14, 30, 31, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2,
        1])
SEGMENT:  tensor([19, 23, 24, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 11, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 3, 3])
SEGMENT:  tensor([ 5, 12, 12, 14])
-----------------
[TRAIN] steps=20	loss: 44.4031	nll: 40.5222	kl_b: 36.7049	kl_z: 2.1045	reconst_acc: 0.2299
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 17, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  7,  8, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  1,  1, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6,  7, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 2,  4,  6, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 24, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  1,  1, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  3,  3, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  2,  2, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  2,  2, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  5,  5, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  3,  3, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 1,  1,  1, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  3,  3, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  5,  5, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3,  3,  3, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  3,  3, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  1,  1, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 3,  3,  3, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 2,  3,  4, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 11, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  1,  1, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  4,  4, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 1,  1,  1, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  5,  5, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 1,  1,  1, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  3,  3, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  3,  3, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  3,  3, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  7, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  5,  5, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  1,  1, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  5,  6, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  1,  1, 18])
-----------------
[TRAIN] steps=40	loss: 35.7628	nll: 34.7989	kl_b: 7.6709	kl_z: 1.9680	reconst_acc: 0.3398
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  8, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  5,  8, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 14, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  5,  8, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 18, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  5,  8, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5,  8, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  8, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4,  7, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5,  7, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4,  7, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  9, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 3,  6,  8, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 2,  5,  7, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5,  7, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  5,  8, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5,  7, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5,  8, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  8, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  8, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 15, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 2,  4,  7, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5,  8, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  5,  7, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  8, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3,  5,  7, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3,  5,  8, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  6,  9, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 14, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4,  7, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 3,  5,  8, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3,  5,  8, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  5,  7, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  8, 17])
-----------------
[TRAIN] steps=60	loss: 31.3868	nll: 30.8622	kl_b: 1.5044	kl_z: 3.7416	reconst_acc: 0.4426
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4,  6, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  8, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 2,  4,  6, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4,  6, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 23, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  5,  7, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 17, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  9, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5,  7, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4,  6, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4,  6, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 11, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5,  7, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 18, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4,  7, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4,  6, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5,  8, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5,  7, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 11, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5,  7, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  5,  8, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4,  6, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  9, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4,  6, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 2,  5,  7, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4,  6, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5,  7, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4,  7, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4,  6, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4,  6, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4,  6, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5,  8, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4,  6, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4,  6, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5,  8, 21])
-----------------
[TRAIN] steps=80	loss: 27.1326	nll: 26.1434	kl_b: 2.3753	kl_z: 7.5165	reconst_acc: 0.5580
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 13, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 10, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  8, 11, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  9, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 15, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  6, 10, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  9, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 21, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5,  8, 14, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 10, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 10, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 10, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 11, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 11, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4,  7, 10, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  7, 13, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 10, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4,  7, 12, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 10, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 3,  6,  9, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 10, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  9, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 12, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  9, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4,  7, 12, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 10, 22])
-----------------
[TRAIN] steps=100	loss: 22.8342	nll: 21.4222	kl_b: 4.1612	kl_z: 9.9591	reconst_acc: 0.6423
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 13, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5,  9, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 16, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 13, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 10, 14, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 16, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 11, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 11, 16, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 11, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  9, 13, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 11, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 12, 17, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 16, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 14, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 20, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 17, 21])
-----------------
[TRAIN] steps=120	loss: 20.3389	nll: 18.6377	kl_b: 6.2946	kl_z: 10.7170	reconst_acc: 0.6851
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 13, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4,  7, 13, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 15, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 14, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 13, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 11, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 16, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  5, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 13, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  6, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 12, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  9, 12, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 12, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 11, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 21, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 14, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 27, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 12, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 15, 29])
-----------------
[TRAIN] steps=140	loss: 19.0329	nll: 17.2122	kl_b: 7.4513	kl_z: 10.7560	reconst_acc: 0.7082
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 11, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  9, 12, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  4, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  9, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 13, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 13, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 13, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 17, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 16, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5,  9, 13, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 10, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 10, 14, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 14, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 14, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 15, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 12, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 10, 14, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 19, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 13, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4,  8, 14, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 16, 22])
-----------------
[TRAIN] steps=160	loss: 18.1917	nll: 16.3519	kl_b: 7.0953	kl_z: 11.3032	reconst_acc: 0.7262
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  4, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3,  7, 14, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3,  6, 12, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 10, 14, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 11, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 12, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 11, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 12, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 4,  7, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 14, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 14, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 12, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 14, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4,  7, 14, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 10, 13, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 13, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 13, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4,  9, 13, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 10, 17, 26])
-----------------
[TRAIN] steps=180	loss: 17.6225	nll: 15.5996	kl_b: 8.4735	kl_z: 11.7555	reconst_acc: 0.7419
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4,  8, 13, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 12, 17, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 13, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 19, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 13, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 21, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 11, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 14, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 11, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3,  9, 13, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 11, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  6, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 24, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 15, 18, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 3,  7, 12, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5,  8, 14, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 13, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5,  9, 14, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 18, 28, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 18, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 10, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4,  9, 13, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 12, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6,  9, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  9, 13, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5,  8, 13, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 13, 27])
-----------------
[TRAIN] steps=200	loss: 17.3589	nll: 15.6345	kl_b: 6.1526	kl_z: 11.0916	reconst_acc: 0.7347
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  8, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6,  8, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  4,  6, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7,  9, 11, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  6,  7, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 12, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 2,  6, 10, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 11, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  4,  9, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  6,  9, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  6,  8, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 3,  7,  9, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7,  8, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  3,  7, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7,  9, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  5, 14, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 2,  6,  7, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6,  8, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 12, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 21, 32, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  6,  9, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 1,  4,  7, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 15, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  5,  7, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 2,  6,  8, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6,  8, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5, 11, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 10, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4,  6, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  9, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 11, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  5,  6, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 5,  7,  9, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  9, 27])
-----------------
[TRAIN] steps=220	loss: 17.1980	nll: 15.3721	kl_b: 6.6456	kl_z: 11.6139	reconst_acc: 0.7419
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 10, 13, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 24, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 25, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 18, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 12, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 13, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 15, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  8, 14, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 13, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 10, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 10, 14, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 19, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 14, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1])
SEGMENT:  tensor([ 4, 10, 12, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 13, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 4,  7, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 13, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  5, 14, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 14, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 14, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 18])
-----------------
[TRAIN] steps=240	loss: 16.9723	nll: 14.7073	kl_b: 10.3146	kl_z: 12.3357	reconst_acc: 0.7554
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 11, 14, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 19, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 2,  8, 13, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 24, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8,  9, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 11, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 4,  9, 14, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 13, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  5, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5,  8, 12, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  5, 11, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8,  9, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 11, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6,  7, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7,  9, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 12, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 11, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3,  7,  8, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 12, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 11, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 10, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 11, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 13, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  5, 11, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6,  9, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 11, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4, 14, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 3,  7, 10, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  6, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 10, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 2,  8, 10, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 2, 10, 12, 24])
-----------------
[TRAIN] steps=260	loss: 17.3596	nll: 15.3892	kl_b: 6.9961	kl_z: 12.7086	reconst_acc: 0.7443
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 15, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 16, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([10, 14, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2])
SEGMENT:  tensor([ 7, 10, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 9, 13, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([ 5, 12, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 10, 14, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  6, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 4, 14, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  5, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 12, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 10, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 24, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  8, 12, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 5, 12, 15, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5, 15, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 12, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 13, 16, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([10, 14, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2])
SEGMENT:  tensor([ 5, 12, 12, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  6, 13, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 14, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 24, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 15, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 2, 11, 15, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3, 12, 20, 22])
-----------------
[TRAIN] steps=280	loss: 16.5399	nll: 14.3824	kl_b: 9.6182	kl_z: 11.9573	reconst_acc: 0.7596
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3])
SEGMENT:  tensor([10, 16, 23, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 29, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 20, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 9, 16, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 14, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 4, 10, 15, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 14, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 14, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 21, 32, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 17, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 11, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 11, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 15, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 14, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 11, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 11, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 18, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 12, 18, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 13, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 15, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 12, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 12, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 16, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 7, 14, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 18, 28, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 19, 22, 31])
-----------------
[TRAIN] steps=300	loss: 16.2609	nll: 13.9666	kl_b: 10.1906	kl_z: 12.7524	reconst_acc: 0.7673
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 14, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 14, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 18, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 15, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 19, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 13, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 13, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([12, 16, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  7, 12, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 10, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 19, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5, 13, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 16, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 15, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 24, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 14, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 15, 18, 26])
-----------------
[TRAIN] steps=320	loss: 15.8776	nll: 13.5074	kl_b: 10.6406	kl_z: 13.0616	reconst_acc: 0.7715
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  9, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  9, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 13, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 13, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 16, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 16, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 23, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 16, 22, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 18, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 12, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 17, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 16, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3, 10, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 10, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 18, 28, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 19, 22, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 10, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 13, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5,  8, 13, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 11, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 12, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 14, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 24, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 19, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5,  9, 15, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4, 10, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 14, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 16, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 14, 20])
-----------------
[TRAIN] steps=340	loss: 15.9891	nll: 13.7497	kl_b: 9.3354	kl_z: 13.0588	reconst_acc: 0.7714
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 16, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 11, 16, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5, 15, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 13, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2, 14, 21, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 13, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 14, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 13, 18, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 21, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 22, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 5,  9, 15, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([11, 16, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 15, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 25, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([11, 18, 25, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([11, 14, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 8, 15, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 11, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 4, 10, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 5, 10, 16, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 24, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 14, 20, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([10, 13, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1])
SEGMENT:  tensor([ 5, 11, 12, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4, 15, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 5,  9, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 15, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 16, 21, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 15, 29])
-----------------
[TRAIN] steps=360	loss: 15.5286	nll: 12.9020	kl_b: 13.5470	kl_z: 12.7184	reconst_acc: 0.7852
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        3, 3])
SEGMENT:  tensor([ 9, 19, 23, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 12, 17, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 12, 18, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 10, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([ 7, 14, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 10, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 9, 13, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 12, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([ 5, 14, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([ 5, 14, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([11, 18, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 9, 17, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 29, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 20, 30, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 7, 15, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 4, 11, 16, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([10, 14, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 7, 15, 18, 24])
-----------------
[TRAIN] steps=380	loss: 15.2923	nll: 12.5208	kl_b: 13.7623	kl_z: 13.9530	reconst_acc: 0.7892
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 16, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 10, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 9, 12, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 27, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 12, 19, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([10, 13, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 15, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1])
SEGMENT:  tensor([ 7, 15, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 13, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 14, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 20, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  9, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 10, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 23, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 24, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 9, 14, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 22, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 13, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 14, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 4,  8, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([11, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 14, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 20, 27])
-----------------
[TRAIN] steps=400	loss: 15.5558	nll: 12.7471	kl_b: 14.8677	kl_z: 13.2192	reconst_acc: 0.7858
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 17, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 19, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([12, 16, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([10, 13, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 25, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([10, 19, 26, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  9, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([10, 19, 28, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([11, 17, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 7, 15, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 24, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 12, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 16, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 18, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 2, 11, 15, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 8, 14, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1])
SEGMENT:  tensor([ 3, 10, 12, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 13, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5, 15, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  7, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 11, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([ 9, 17, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([10, 16, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([10, 18, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 10, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 12, 17, 17])
-----------------
[TRAIN] steps=420	loss: 15.8444	nll: 12.8130	kl_b: 16.2880	kl_z: 14.0258	reconst_acc: 0.7861
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 13, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 19, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 13, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 10, 16, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 13, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 24, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([11, 20, 24, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 23, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 12, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4,  9, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 7, 15, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 15, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([10, 19, 23, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 13, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 7, 16, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 21, 32, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 22, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 5, 13, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6,  8, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 12, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 13, 15])
-----------------
[TRAIN] steps=440	loss: 15.1991	nll: 12.3823	kl_b: 14.3318	kl_z: 13.8360	reconst_acc: 0.7933
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 12, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 12, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 14, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  6, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 4, 14, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 12, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 15, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 16, 21, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 13, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 16, 26, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 15, 20, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 16, 21, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 15, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 23, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 24, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 14, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 12, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 12, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 20, 28, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 20, 29, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 17, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 13, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  9, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([10, 13, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 23, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  5, 14, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1])
SEGMENT:  tensor([ 6, 14, 26, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 24, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 16, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 12, 17, 27])
-----------------
[TRAIN] steps=460	loss: 14.6245	nll: 11.9060	kl_b: 13.9046	kl_z: 13.2804	reconst_acc: 0.8002
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 13, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 24, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 25, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 9, 12, 15, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 7, 15, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 24, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 14, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 18, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 14, 19, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 23, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 24, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 7, 14, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 15, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 21, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 14, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 20, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 19, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 21, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 6, 14, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([11, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 12, 16, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 12, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  9, 16, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 11, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 13, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([10, 14, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 11, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3])
SEGMENT:  tensor([10, 17, 23, 25])
-----------------
[TRAIN] steps=480	loss: 14.8153	nll: 12.0715	kl_b: 13.4448	kl_z: 13.9931	reconst_acc: 0.8006
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 13, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 13, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 13, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 21, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 14, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 14, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6,  8, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  7, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 10, 13, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 5,  9, 15, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  6, 12, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 24, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7,  9, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5,  9, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 10, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4,  9, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 14, 19, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 12, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 10, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7,  9, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 11, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  5, 14, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 12, 15, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 11, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 11, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 12, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 18, 28, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  7, 10, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 19, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5,  9, 13, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  5,  9, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 17, 21])
-----------------
[TRAIN] steps=500	loss: 15.2040	nll: 13.1373	kl_b: 7.2100	kl_z: 13.4570	reconst_acc: 0.7803
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3,  8, 13, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 10, 13, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 11, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 10, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 13, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5, 11, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 12, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  7, 11, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  7, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 11, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 10, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 26, 34])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 12, 34])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 3,  8, 12, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  6,  9, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4,  9, 13, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 10, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4,  8, 12, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 10, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 10, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 14, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  6, 10, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  8, 11, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3, 10, 13, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 13, 18])
-----------------
[TRAIN] steps=520	loss: 14.0074	nll: 11.8591	kl_b: 9.4406	kl_z: 12.0429	reconst_acc: 0.8011
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 16, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 12, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  8, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 14, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 10, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 17, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 9, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 15, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 13, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 15, 21, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 12, 17, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 24, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 21, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  5, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  6, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 21, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 15, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 15, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3,  7, 11, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 18, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 14, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 15, 31])
-----------------
[TRAIN] steps=540	loss: 13.6332	nll: 11.1173	kl_b: 11.5858	kl_z: 13.5734	reconst_acc: 0.8158
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 19, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 27, 39])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 39])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 12, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 26, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 24, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 13, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 2, 14, 22, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6,  9, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 23, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 18, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 7, 12, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 15, 20, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 16, 21, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3])
SEGMENT:  tensor([ 8, 17, 23, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 14, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1])
SEGMENT:  tensor([ 5, 11, 12, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 18, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 14, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 10, 16, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 3, 10, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 18, 22])
-----------------
[TRAIN] steps=560	loss: 13.0396	nll: 10.4925	kl_b: 12.2977	kl_z: 13.1731	reconst_acc: 0.8243
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 10, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 12, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 6,  9, 15, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  6, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 9, 14, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 10, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  8, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 12, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2, 10, 13, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 13, 18, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 16, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 17, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 13, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  5, 14, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 15, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([11, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 11, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 15, 20, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 16, 21, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 27, 39])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 17, 39])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 10, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 11, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 12, 16, 23])
-----------------
[TRAIN] steps=580	loss: 12.7707	nll: 10.2361	kl_b: 12.1921	kl_z: 13.1539	reconst_acc: 0.8245
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 18, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 12, 18, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  7, 17, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  9, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 19, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([11, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 11, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 12, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 10, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 9, 12, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 10, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 11, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  8, 17, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 11, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1])
SEGMENT:  tensor([ 8, 12, 14, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 14, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 11, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 15, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 12, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 14, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 12, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  6, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3])
SEGMENT:  tensor([ 4, 15, 24, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 15, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 13, 18, 26])
-----------------
[TRAIN] steps=600	loss: 12.8118	nll: 10.3283	kl_b: 11.2580	kl_z: 13.5766	reconst_acc: 0.8273
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 16, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 14, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 10, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 10, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 10, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 13, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 10, 13, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3])
SEGMENT:  tensor([10, 16, 23, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 10, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5,  7, 10, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5,  9, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 13, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 13, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5, 14, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 3,  7, 11, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  8, 14, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 11, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 13, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 27, 39])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 17, 39])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 10, 13, 25])
-----------------
[TRAIN] steps=620	loss: 12.3672	nll: 9.8842	kl_b: 12.3021	kl_z: 12.5276	reconst_acc: 0.8352
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 12, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 18, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 13, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 2, 14, 22, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 18, 28, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 19, 24, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 12, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 7, 12, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 9, 15, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 5, 13, 20, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 13, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([10, 13, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 7, 17, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3, 10, 16, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7,  9, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 21, 32, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 15, 22, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 16, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 10, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5, 13, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 22, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 22, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 12, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 16, 23])
-----------------
[TRAIN] steps=640	loss: 14.4472	nll: 11.4530	kl_b: 16.9028	kl_z: 13.0395	reconst_acc: 0.8066
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 24, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  8, 16, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 17, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 13, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  4, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 2,  9, 13, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 24, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 15, 25, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([12, 15, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 10, 12, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 14, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1])
SEGMENT:  tensor([ 8, 15, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 13, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([15, 21, 24, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 10, 14, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 16, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([10, 16, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  5, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 12, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 18, 23, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 10, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6,  9, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 11, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1])
SEGMENT:  tensor([ 8, 13, 14, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2])
SEGMENT:  tensor([13, 18, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([11, 14, 16, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 25, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 19, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 16, 21])
-----------------
[TRAIN] steps=660	loss: 14.0240	nll: 11.4346	kl_b: 12.6507	kl_z: 13.2428	reconst_acc: 0.8054
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6,  8, 13, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4,  7, 11, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5,  9, 14, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 13, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  7, 13, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 12, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 13, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 14, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 10, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4, 14, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 11, 16, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  5, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 12, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 17, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 14, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  8, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 13, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4,  9, 13, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 14, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 13, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 16, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 23, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 17, 29])
-----------------
[TRAIN] steps=680	loss: 12.7145	nll: 10.4999	kl_b: 10.4378	kl_z: 11.7090	reconst_acc: 0.8213
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([11, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 11, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 12, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 14, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 12, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 12, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5,  8, 12, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 12, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 10, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 8, 11, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 20, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 10, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 11, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 11, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 10, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 29, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 16, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 26, 34])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 17, 34])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5,  8, 13, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 13, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 10, 29])
-----------------
[TRAIN] steps=700	loss: 12.2327	nll: 9.9770	kl_b: 10.5861	kl_z: 11.9715	reconst_acc: 0.8291
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 20, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 13, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4,  8, 14, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 14, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 18, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 10, 14, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 29, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 20, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 15, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 27, 39])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 27, 39])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4,  9, 13, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 13, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4, 14, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 20, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3,  9, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 11, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 15, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 15, 20, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 12, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 25, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 14, 19, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  8, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  5, 12, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  8, 16, 16])
-----------------
[TRAIN] steps=720	loss: 12.4252	nll: 9.8189	kl_b: 14.6656	kl_z: 11.3973	reconst_acc: 0.8319
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  8, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  5,  8, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7,  9, 14, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 13, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4,  9, 12, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 10, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  6, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 13, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5,  8, 12, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  5, 10, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 10, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 19, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 12, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 10, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 11, 16, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 2,  6, 12, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 16, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5,  9, 17, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 24, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 24, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 13, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 23, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 16, 23, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([11, 12, 17, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2, 10, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 20, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 12, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 12, 20])
-----------------
[TRAIN] steps=740	loss: 11.7060	nll: 9.2705	kl_b: 11.9840	kl_z: 12.3711	reconst_acc: 0.8431
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 15, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 24, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 25, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 4, 13, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        3, 3])
SEGMENT:  tensor([ 8, 19, 23, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 11, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 22, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 10, 14, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 5,  9, 18, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 12, 18, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 16, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 10, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 8, 11, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 14, 19, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 21, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 14, 21, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 15, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 15, 20, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 18, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 11, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 12, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 13, 16, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 19, 24, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 11, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 18, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 12, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 4,  9, 16, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  7, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5,  8, 14, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 29, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 24, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([15, 21, 29, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  9, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 10, 20])
-----------------
[TRAIN] steps=760	loss: 11.7434	nll: 8.9712	kl_b: 16.1474	kl_z: 11.5741	reconst_acc: 0.8470
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 14, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 4, 17, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 24, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 23, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 17, 24, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 24, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5, 14, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 12, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 16, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1])
SEGMENT:  tensor([10, 17, 27, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1])
SEGMENT:  tensor([ 9, 18, 28, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([11, 17, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([12, 22, 32, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 5, 12, 19, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5,  9, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 12, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 17, 23, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 15, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 24, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 15, 25, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 16, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 20, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  8, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 9, 14, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 15, 22, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  8, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  5, 12, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 19, 22])
-----------------
[TRAIN] steps=780	loss: 11.9874	nll: 9.0563	kl_b: 17.5230	kl_z: 11.7882	reconst_acc: 0.8462
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 25, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([10, 18, 26, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2])
SEGMENT:  tensor([ 6, 12, 12, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 19, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5, 12, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 14, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 12, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 12, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 5, 14, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3])
SEGMENT:  tensor([ 8, 15, 23, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 14, 21, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 13, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5,  9, 14, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 10, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([11, 16, 23, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 7, 15, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([14, 21, 29, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  5, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 12, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 24, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 24, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 16, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2])
SEGMENT:  tensor([10, 18, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 4, 17, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([10, 19, 23, 23])
-----------------
[TRAIN] steps=800	loss: 11.0840	nll: 8.5238	kl_b: 12.9997	kl_z: 12.6019	reconst_acc: 0.8563
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 13, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 25, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 17, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 13, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4,  9, 16, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 11, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 11, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5, 12, 16, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 12, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 13, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 10, 13, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 19, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 14, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 10, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 11, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 12, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 3,  8, 17, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3, 10, 13, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 14, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 18, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 13, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5, 12, 23])
-----------------
[TRAIN] steps=820	loss: 11.0800	nll: 8.6883	kl_b: 11.3896	kl_z: 12.5273	reconst_acc: 0.8504
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 10, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 7, 12, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5, 15, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 17, 26, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 26, 34])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 27, 34])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 12, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7,  9, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 24, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 6, 17, 28, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 27, 39])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 17, 28, 39])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 8, 15, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([10, 19, 28, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 13, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 12, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 13, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 14, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 12, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 12, 18, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 16, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 13, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3])
SEGMENT:  tensor([ 8, 14, 23, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 16, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 27])
-----------------
[TRAIN] steps=840	loss: 10.6264	nll: 8.0330	kl_b: 13.6168	kl_z: 12.3172	reconst_acc: 0.8619
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([10, 13, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  5, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 12, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 6, 12, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 20, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 19, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5, 12, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 12, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 14, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 24, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 24, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 23, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 12, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 10, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 13, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 15, 21, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 15, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  4, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 4, 13, 16, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 12, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 14, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 10, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3,  9, 12, 24])
-----------------
[TRAIN] steps=860	loss: 10.6215	nll: 8.0005	kl_b: 13.9077	kl_z: 12.3025	reconst_acc: 0.8641
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 20, 28, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 21, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  8, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 14, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 24, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  6,  9, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 12, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 13, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 15, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  7, 15, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 10, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 12, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 11, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 14, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 14, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 14, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3])
SEGMENT:  tensor([10, 19, 24, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
SEGMENT:  tensor([ 7, 14, 22, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 8, 15, 21, 22])
-----------------
[TRAIN] steps=880	loss: 10.4227	nll: 7.9830	kl_b: 10.8875	kl_z: 13.5095	reconst_acc: 0.8657
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 8, 12, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([10, 13, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 11, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  9, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 10, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 12, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 12, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 12, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 16, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 14, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 14, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 7, 16, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 12, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 13, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 17, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 14, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 11, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 12, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 12, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 14, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5,  8, 13, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 24, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 20, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 12, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 14, 18, 20])
-----------------
[TRAIN] steps=900	loss: 10.2910	nll: 7.6940	kl_b: 13.5521	kl_z: 12.4179	reconst_acc: 0.8681
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4,  9, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  8, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 14, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 16, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 15, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  7, 15, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 7, 14, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 7, 16, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3, 10, 17, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 18, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 11, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 9, 19, 23, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 18, 28, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 11, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 15, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 7, 12, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  9, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 14, 21, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 17, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 13, 17, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 6, 12, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5, 10, 17, 26])
-----------------
[TRAIN] steps=920	loss: 10.5743	nll: 8.2172	kl_b: 10.4817	kl_z: 13.0891	reconst_acc: 0.8605
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 15, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 25, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 25, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4,  8, 15, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 18, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 12, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 11, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 14, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 13, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 14, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 18, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 14, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 5,  8, 15, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 13, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 11, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 14, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3, 10, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  6, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 14, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 21, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 21, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 10, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 16, 19])
-----------------
[TRAIN] steps=940	loss: 10.3089	nll: 7.9976	kl_b: 11.5212	kl_z: 11.5920	reconst_acc: 0.8643
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 2,  4, 11, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 13, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 21, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 14, 21, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 14, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 20, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4,  9, 16, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 10, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  7, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 2, 11, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 18, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 3, 10, 14, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 12, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 13, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  9, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 16, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 21, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 5, 13, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 13, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 12, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 12, 17, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 11, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 11, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 10, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 11, 18])
-----------------
[TRAIN] steps=960	loss: 9.9728	nll: 7.5138	kl_b: 11.6380	kl_z: 12.9529	reconst_acc: 0.8721
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 9, 17, 23, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([10, 20, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 17, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 16, 27, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 11, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4,  8, 13, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 16, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 21, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 14, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 13, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3])
SEGMENT:  tensor([ 8, 17, 23, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 21, 32, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 15, 21, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  5, 14, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1])
SEGMENT:  tensor([ 6, 14, 26, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 15, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 15, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4, 11, 16, 24])
-----------------
[TRAIN] steps=980	loss: 9.8599	nll: 7.3134	kl_b: 13.3415	kl_z: 12.1230	reconst_acc: 0.8763
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2,  8, 13, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 6, 16, 28, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 22, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 10, 14, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 9, 15, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 18, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 17, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 21, 32, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 15, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 15, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 12, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 8, 12, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5,  9, 13, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 21, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 14, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 11, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([10, 13, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 12, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 13, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 24, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 24, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 23, 32])
-----------------
[TRAIN] steps=1000	loss: 9.6542	nll: 7.0766	kl_b: 12.6979	kl_z: 13.0779	reconst_acc: 0.8793
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 10, 13, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([11, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 12, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 7, 11, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  8, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  9, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3, 10, 17, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7,  9, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6,  9, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 12, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 12, 17, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 14, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 10, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 11, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 7, 15, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([11, 15, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 13, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 13, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  5, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  6, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 18, 23, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 3, 3])
SEGMENT:  tensor([11, 18, 24, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([ 8, 15, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 18, 28, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 19, 24, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 25, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 19, 25, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 10, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
SEGMENT:  tensor([ 8, 17, 25, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 17, 23])
-----------------
[TRAIN] steps=1020	loss: 9.4811	nll: 6.9182	kl_b: 12.9580	kl_z: 12.6711	reconst_acc: 0.8835
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  8, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  9, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 12, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 16, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 16, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 18, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 12, 18, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 14, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 11, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 10, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 15, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 13, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 18, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 10, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5,  9, 15, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 12, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 12, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([10, 16, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 24, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 9, 14, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 15, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 4, 14, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 18, 21])
-----------------
[TRAIN] steps=1040	loss: 9.4587	nll: 6.9512	kl_b: 12.4330	kl_z: 12.6416	reconst_acc: 0.8830
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 17, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 14, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 15, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 24, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 20, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3,  7, 10, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  9, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 10, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 11, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 24, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 8,  9, 14, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 18, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 27, 39])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 17, 39])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4, 14, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 11, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  6, 13, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 18, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 15, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 14, 18, 21])
-----------------
[TRAIN] steps=1060	loss: 9.6635	nll: 7.2866	kl_b: 11.2238	kl_z: 12.5458	reconst_acc: 0.8736
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  7, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 4, 17, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 15, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 15, 21, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2])
SEGMENT:  tensor([10, 18, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 13, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 14, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 13, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4])
SEGMENT:  tensor([18, 18, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])
SEGMENT:  tensor([ 6, 21, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 6, 20, 23, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 12, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 7, 19, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 16, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 11, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 13, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 21, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 14, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 13, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 18, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1])
SEGMENT:  tensor([ 5, 15, 16, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 15, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  6, 15, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 25, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 25, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 13, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 17, 22])
-----------------
[TRAIN] steps=1080	loss: 10.5653	nll: 7.9685	kl_b: 14.4808	kl_z: 11.4871	reconst_acc: 0.8630
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 4, 14, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 13, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 12, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 15, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 13, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 9, 11, 14, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 24, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 9, 17, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  9, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 10, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 14, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 13, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5,  8, 12, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([10, 14, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4,  7, 13, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 12, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 10, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 6,  9, 15, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
        3])
SEGMENT:  tensor([ 4, 22, 23, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 13, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([14, 17, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 15, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 3, 17, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7,  9, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 14, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([11, 15, 26, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 2, 11, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 26, 34])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 17, 34])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 7, 14, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 4,  7, 22, 22])
-----------------
[TRAIN] steps=1100	loss: 10.0658	nll: 7.3972	kl_b: 14.2010	kl_z: 12.4848	reconst_acc: 0.8752
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 20, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 4, 14, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
SEGMENT:  tensor([ 7, 14, 22, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 11, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2])
SEGMENT:  tensor([ 3, 10, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 11, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 11, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([10, 11, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 2,  8, 16, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 11, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 8, 14, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 17, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 15, 21, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 4, 17, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 17, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 17, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 12, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2,  8, 13, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([10, 13, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 6, 17, 28, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  5, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 23, 28])
-----------------
[TRAIN] steps=1120	loss: 9.5734	nll: 6.9996	kl_b: 13.7870	kl_z: 11.9502	reconst_acc: 0.8808
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  7, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 12, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 12, 17, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7,  9, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3,  7, 10, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  6, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 12, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 11, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 29, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 30, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 11, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([10, 11, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2,  8, 13, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 12, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  8, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  6,  9, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([10, 13, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 16, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 16, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([10, 17, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 15, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 16, 21, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 10, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 13, 17, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 16, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 7, 17, 28, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 13, 16, 30])
-----------------
[TRAIN] steps=1140	loss: 9.5394	nll: 6.8149	kl_b: 14.9089	kl_z: 12.3364	reconst_acc: 0.8821
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 15, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 15, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 15, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 23, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 12, 16, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 11, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([10, 12, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([14, 20, 29, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])
SEGMENT:  tensor([ 7, 22, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5,  9, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 13, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 13, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  8, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 2,  9, 12, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 12, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 19, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  6, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 10, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 13, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([13, 16, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1])
SEGMENT:  tensor([ 5, 15, 16, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 12, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  5, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  6, 12, 18])
-----------------
[TRAIN] steps=1160	loss: 9.8221	nll: 7.0022	kl_b: 16.0174	kl_z: 12.1819	reconst_acc: 0.8793
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 20, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2])
SEGMENT:  tensor([ 3, 10, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([10, 16, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 11, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 22, 32, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 14, 21, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3,  8, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([11, 15, 23, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 19, 28, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([12, 16, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 11, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 7, 11, 14, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 10, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3, 14, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 11, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 1, 11, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
SEGMENT:  tensor([ 4, 11, 22, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 11, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  9, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 12, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 17, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 15, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 22, 29])
-----------------
[TRAIN] steps=1180	loss: 9.7610	nll: 7.0329	kl_b: 14.9125	kl_z: 12.3684	reconst_acc: 0.8843
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 14, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5,  8, 17, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 11, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 18, 27, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 11, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 24, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3])
SEGMENT:  tensor([ 8, 14, 24, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 14, 21, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 9, 13, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 13, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 12, 17, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  9, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 26, 34])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 17, 26, 34])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 7, 14, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 20, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5,  7, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 24, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 15, 24, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 14, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 21, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 5, 13, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 1,  4, 10, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 11, 19, 24])
-----------------
[TRAIN] steps=1200	loss: 9.3413	nll: 6.6380	kl_b: 14.6096	kl_z: 12.4237	reconst_acc: 0.8884
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 14, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 12, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 10, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 11, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5,  7, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 12, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 18, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 18, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 13, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 13, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  7, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 2, 10, 17, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 9, 13, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  8, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 13, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 10, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 17, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 12, 17, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([10, 13, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7,  8, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 14, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 12, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 18])
-----------------
[TRAIN] steps=1220	loss: 9.0829	nll: 6.3805	kl_b: 14.4036	kl_z: 12.6202	reconst_acc: 0.8932
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  5, 14, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 1,  5, 14, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 11, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 19, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1])
SEGMENT:  tensor([12, 19, 26, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 19, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 19, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 15, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 14, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3, 14, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 10, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 18, 28, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 18, 28, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 11, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  8, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 13, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 16, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 14, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 13, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 14, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  8, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6,  8, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 10, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 8, 10, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 21, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 14, 21, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 13, 17])
-----------------
[TRAIN] steps=1240	loss: 8.9110	nll: 6.2223	kl_b: 14.3272	kl_z: 12.5597	reconst_acc: 0.8947
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 24, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3])
SEGMENT:  tensor([ 8, 14, 24, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 18, 28, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 19, 28, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  8, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 19, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 9, 13, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1, 11, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 9, 19, 23, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 14, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([ 8, 17, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 12, 14, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 10, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([11, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([11, 14, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 2, 12, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 18, 23, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3])
SEGMENT:  tensor([10, 18, 23, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 11, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 16, 22])
-----------------
[TRAIN] steps=1260	loss: 8.7867	nll: 6.0975	kl_b: 14.3659	kl_z: 12.5265	reconst_acc: 0.8983
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([11, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([11, 14, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 13, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 13, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 17, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 18, 23, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3])
SEGMENT:  tensor([10, 18, 23, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  8, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 12, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 12, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 22, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 15, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 2,  6, 15, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  8, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6,  8, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 10, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 8, 10, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  4, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  6, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 9, 15, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 14, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 9, 19, 23, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  6, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  9, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 13, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 29, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 29, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 17, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 14, 21, 23])
-----------------
[TRAIN] steps=1280	loss: 8.7184	nll: 5.9680	kl_b: 14.5455	kl_z: 12.9581	reconst_acc: 0.9020
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 15, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 16, 20, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 21, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 22, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 10, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 11, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 1,  4, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 22, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 22, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 24, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 24, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 12, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5,  7, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 7, 14, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 12, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 15, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 12, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 12, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 15, 19, 23])
-----------------
[TRAIN] steps=1300	loss: 8.4705	nll: 5.8499	kl_b: 13.7609	kl_z: 12.4452	reconst_acc: 0.8986
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 20, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 13, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 12, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 3,  9, 14, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 10, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 10, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 13, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 14, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
SEGMENT:  tensor([ 7, 13, 22, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 16, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  5, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 15, 20, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 16, 20, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 16, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 15, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 10, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  5, 14, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 2,  5, 14, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 11, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 9, 11, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 22, 30])
-----------------
[TRAIN] steps=1320	loss: 8.4552	nll: 5.7383	kl_b: 14.3246	kl_z: 12.8450	reconst_acc: 0.9049
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  8, 10, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 9, 13, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  6, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 5, 15, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  8, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 12, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([14, 20, 29, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 10, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 15, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 12, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 11, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 24, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 24, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5,  9, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  8, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6,  8, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2, 10, 19, 21])
-----------------
[TRAIN] steps=1340	loss: 8.5177	nll: 5.8107	kl_b: 14.2115	kl_z: 12.8583	reconst_acc: 0.9023
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 14, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  7, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6,  7, 12, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 12, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 16, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 16, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 12, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 12, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  6, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 27, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 19, 27, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 21, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 5, 13, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 18, 28, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 23, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 22, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 22, 33, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 11, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 12, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 14, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  4, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  4, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 15, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 16, 20, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 9, 16, 21, 26])
-----------------
[TRAIN] steps=1360	loss: 8.3573	nll: 5.6551	kl_b: 13.9608	kl_z: 13.0615	reconst_acc: 0.9066
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 25, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 25, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 15, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 2,  6, 15, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 18, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([11, 15, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 17, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 22, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 22, 33, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 19, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 13, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 15, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 16, 27, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 13, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 14, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 14, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  8, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 12, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 13, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  6, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 22])
-----------------
[TRAIN] steps=1380	loss: 8.2452	nll: 5.5542	kl_b: 14.1685	kl_z: 12.7419	reconst_acc: 0.9044
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 14, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 15, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 17, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3, 14, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 11, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 2, 10, 17, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 14, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 19, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 19, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 12, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 12, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3, 12, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 14, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 14, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 22, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 18, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 16, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 14, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 13, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 5,  9, 15, 16])
-----------------
[TRAIN] steps=1400	loss: 8.2075	nll: 5.5088	kl_b: 13.9431	kl_z: 13.0441	reconst_acc: 0.9064
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 13, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 12, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 17, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 17, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 12, 17, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  8, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 5, 15, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 15, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 11, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  8, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 14, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 24, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 24, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7,  8, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 14, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 14, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 14, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 4,  7, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 1,  8, 16, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 13, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([11, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([11, 14, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3])
SEGMENT:  tensor([ 8, 17, 23, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 21])
-----------------
[TRAIN] steps=1420	loss: 8.1299	nll: 5.4504	kl_b: 13.7356	kl_z: 13.0598	reconst_acc: 0.9080
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 12, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 16, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 9, 13, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 5, 15, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 11, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  8, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([11, 15, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  7, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([ 7, 18, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 16, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 14, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 13, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 12, 14, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 13, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([ 6, 13, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 15, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 16, 20, 30])
-----------------
[TRAIN] steps=1440	loss: 8.6403	nll: 5.8792	kl_b: 14.6050	kl_z: 13.0051	reconst_acc: 0.9008
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  7,  9, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([12, 16, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 15, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 16, 20, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 11, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 16, 27, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([10, 13, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 13, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6,  9, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 21, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 5, 13, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  9, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
SEGMENT:  tensor([ 8, 17, 25, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 15, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 19, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 1, 11, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 21, 32, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 21, 32, 35])
-----------------
[TRAIN] steps=1460	loss: 8.1345	nll: 5.4434	kl_b: 14.0830	kl_z: 12.8274	reconst_acc: 0.9052
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  6,  9, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 20, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 20, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 1, 11, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 18, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 13, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 17, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 12, 17, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([ 6, 13, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 10, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
SEGMENT:  tensor([ 8, 17, 25, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 15, 20, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 14, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 23, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 19, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 19, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 20, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 10, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 27, 39])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 28, 39])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 24, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 24, 30])
-----------------
[TRAIN] steps=1480	loss: 7.9150	nll: 5.2247	kl_b: 13.9771	kl_z: 12.9260	reconst_acc: 0.9122
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3, 12, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 15, 20, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 16, 20, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 1,  4, 11, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 14, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 25, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 25, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 27, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 19, 27, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 13, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 16, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 16, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 17, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 3,  9, 14, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 15, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 24, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 24, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  9, 14, 21])
-----------------
[TRAIN] steps=1500	loss: 7.9038	nll: 5.2094	kl_b: 13.8149	kl_z: 13.1285	reconst_acc: 0.9110
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 11, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7,  9, 11, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 12, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 12, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 15, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 7, 12, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 10, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 14, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2, 10, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4,  9, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 19, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([12, 19, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 23, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 16, 24, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 4,  7, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 13, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2, 14, 21, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 20, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 16, 27, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 10, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 21, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 5, 13, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4,  9, 18, 26])
-----------------
[TRAIN] steps=1520	loss: 7.7571	nll: 5.0817	kl_b: 13.8161	kl_z: 12.9377	reconst_acc: 0.9148
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 12, 14, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 15, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 10, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 11, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
SEGMENT:  tensor([ 8, 17, 25, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6,  9, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 14, 20, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
SEGMENT:  tensor([ 7, 13, 22, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 16, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 14, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 11, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 15, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 14, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 14, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 13, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2, 14, 21, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 18, 28, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 19, 28, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  4, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 20, 28, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 20, 29, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 23, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 13, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  9, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6,  9, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 14, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 26, 34])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 18, 26, 34])
-----------------
[TRAIN] steps=1540	loss: 7.7021	nll: 5.0289	kl_b: 13.8236	kl_z: 12.9080	reconst_acc: 0.9150
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 18, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 23, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 25, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 25, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 14, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 14, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  9, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 12, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([ 8, 19, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 11, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
SEGMENT:  tensor([ 4, 12, 22, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 17, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 1,  5, 11, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 11, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  4, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  4, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 27, 39])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 28, 39])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([ 9, 16, 22, 25])
-----------------
[TRAIN] steps=1560	loss: 7.6536	nll: 4.9441	kl_b: 13.8721	kl_z: 13.2223	reconst_acc: 0.9159
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2, 10, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  4, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  4, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 13, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  7,  9, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 12, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 18, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 14, 20, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
SEGMENT:  tensor([ 8, 17, 25, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 12, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 12, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 13, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 11, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 11, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 21, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 14, 21, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  5, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 11, 16])
-----------------
[TRAIN] steps=1580	loss: 7.5634	nll: 4.9168	kl_b: 13.5440	kl_z: 12.9218	reconst_acc: 0.9152
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 10, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  8, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 18, 23, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3])
SEGMENT:  tensor([10, 19, 24, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 10, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 9, 11, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 15, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  9, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 24, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  6, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  6, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 1, 10, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 15, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 13, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7,  9, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 2, 11, 17, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2,  6, 10, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  9, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 12, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5, 10, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 13, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 13, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 18, 22])
-----------------
[TRAIN] steps=1600	loss: 7.5339	nll: 4.8808	kl_b: 13.5431	kl_z: 12.9872	reconst_acc: 0.9185
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 16, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 1,  8, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 13, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 15, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 18, 28, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3,  6, 17, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 21, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 5, 13, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 13, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 11, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 7, 15, 17, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 13, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 25, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 25, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 9, 14, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  6, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([10, 16, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 11, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 12, 17, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 10, 20, 26])
-----------------
[TRAIN] steps=1620	loss: 7.4664	nll: 4.7723	kl_b: 13.8582	kl_z: 13.0824	reconst_acc: 0.9176
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3,  6, 17, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7,  8, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 12, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  7, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([ 7, 18, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 29, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 29, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 16, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 13, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 12, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  5, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 18, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  8, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  8, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 20, 28, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 20, 29, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 15, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 24, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 25, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4,  9, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 15, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 4,  7, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  8, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 22])
-----------------
[TRAIN] steps=1640	loss: 7.3965	nll: 4.7237	kl_b: 13.6671	kl_z: 13.0605	reconst_acc: 0.9196
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3])
SEGMENT:  tensor([ 8, 17, 23, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2,  6, 10, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 25, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 25, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 13, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6,  9, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 13, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 24, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 24, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 12, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 13, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  8, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 17, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 10, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 10, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3, 14, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 15, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 2,  6, 15, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 12, 14, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 21, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 5, 13, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 12, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  7, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([ 7, 18, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 27, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 19, 27, 30])
-----------------
[TRAIN] steps=1660	loss: 7.3267	nll: 4.6577	kl_b: 13.6388	kl_z: 13.0510	reconst_acc: 0.9208
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 11, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 12, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 7, 15, 17, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 12, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 22, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 10, 22, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 13, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 7, 15, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  6, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  9, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 3,  9, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 13, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 14, 21, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 13, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 13, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 24, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 24, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 17])
-----------------
[TRAIN] steps=1680	loss: 7.2337	nll: 4.5628	kl_b: 13.6995	kl_z: 13.0097	reconst_acc: 0.9235
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 11, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 13, 20, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 21, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 5, 13, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 18, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 12, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 2, 11, 17, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 13, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 15, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 18, 23, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3])
SEGMENT:  tensor([10, 19, 24, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 1, 10, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 22, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 10, 22, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 13, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 7, 12, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3])
SEGMENT:  tensor([ 8, 17, 23, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 20, 23])
-----------------
[TRAIN] steps=1700	loss: 7.1537	nll: 4.4922	kl_b: 13.4805	kl_z: 13.1346	reconst_acc: 0.9270
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3, 12, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 16, 22, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 12, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6,  9, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
SEGMENT:  tensor([ 8, 17, 25, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 27, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 19, 27, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 21, 32, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 21, 32, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 19, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 14, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 10, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 8, 10, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 5, 15, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 19, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 19, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 27, 39])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 28, 39])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  8, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 14, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 15, 22, 26])
-----------------
[TRAIN] steps=1720	loss: 7.1982	nll: 4.5309	kl_b: 13.6714	kl_z: 13.0018	reconst_acc: 0.9227
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  7, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([ 7, 18, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 17, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 14, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 14, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 20, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 15, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 12, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 26, 34])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 18, 26, 34])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  6, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([12, 15, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
SEGMENT:  tensor([ 7, 13, 22, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 24, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 24, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 15, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4,  9, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 13, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([10, 16, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 14, 19])
-----------------
[TRAIN] steps=1740	loss: 7.0212	nll: 4.4160	kl_b: 13.1223	kl_z: 12.9295	reconst_acc: 0.9257
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 3,  9, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 21, 32, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 21, 32, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 12, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 13, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([ 9, 17, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  8, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 9, 14, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 13, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 16, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 14, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 18, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 18, 23, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3])
SEGMENT:  tensor([10, 19, 24, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 11, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 13, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 13, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 12, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 11, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 13, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 18, 28, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 19, 28, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 17, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([10, 13, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 18, 21])
-----------------
[TRAIN] steps=1760	loss: 7.0884	nll: 4.4281	kl_b: 13.5883	kl_z: 13.0148	reconst_acc: 0.9267
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 15, 20, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 13, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 13, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 25, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 25, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  6, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  6, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3, 12, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 15, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 2,  5, 11, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 23, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 17, 24, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 15, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3,  6, 17, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 15, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  8, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 9, 14, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 13, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 29, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 29, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 4, 13, 21, 24])
-----------------
[TRAIN] steps=1780	loss: 7.0360	nll: 4.3888	kl_b: 13.4587	kl_z: 13.0130	reconst_acc: 0.9272
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 25, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 25, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([10, 13, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5,  9, 17, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 5,  8, 15, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 1,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 13, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 15, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 15, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 13, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 13, 20, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 9, 13, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
SEGMENT:  tensor([ 4, 12, 22, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 2,  5, 11, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 12, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 13, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 3,  9, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 24, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 25, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 10, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 14, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 14, 25, 31])
-----------------
[TRAIN] steps=1800	loss: 6.9388	nll: 4.2792	kl_b: 13.2282	kl_z: 13.3672	reconst_acc: 0.9293
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 13, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 5,  8, 15, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 25, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 25, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 12, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 26, 34])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 18, 26, 34])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 21, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 15, 21, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 13, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 17, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 13, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 18, 28, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 14, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 21, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 22, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 22, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 13, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  6, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 7, 12, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 14, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 10, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 19, 25])
-----------------
[TRAIN] steps=1820	loss: 6.9109	nll: 4.3029	kl_b: 13.2061	kl_z: 12.8735	reconst_acc: 0.9284
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 10, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3, 14, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 29, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 29, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 15, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 26, 34])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 18, 26, 34])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 14, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 15, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 10, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 13, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7,  8, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 2,  6, 11, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 13, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 21, 32, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 22, 32, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 15, 21, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3,  9, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3])
SEGMENT:  tensor([ 8, 17, 23, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 12, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 11, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 11, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 10, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 22])
-----------------
[TRAIN] steps=1840	loss: 6.8197	nll: 4.1948	kl_b: 13.0802	kl_z: 13.1693	reconst_acc: 0.9312
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 13, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 11, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3, 11, 17, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 13, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 4,  7, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 21, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 14, 21, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 13, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 24, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 24, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 16, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 14, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 7, 12, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 17, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 15, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 16, 20, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 24, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 25, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 15, 21, 25])
-----------------
[TRAIN] steps=1860	loss: 6.8494	nll: 4.2327	kl_b: 13.2799	kl_z: 12.8872	reconst_acc: 0.9292
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 27, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 19, 27, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 17, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 11, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 29, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 29, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 25, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 25, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 19, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 22, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 22, 33, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 15, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 10, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3, 13, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 13, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 13, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 19, 22])
-----------------
[TRAIN] steps=1880	loss: 6.8402	nll: 4.2046	kl_b: 13.3627	kl_z: 12.9931	reconst_acc: 0.9302
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  5, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 12, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 10, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 16, 27, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 15, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
SEGMENT:  tensor([ 8, 17, 25, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  8, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 15, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 16, 20, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 22, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 22, 33, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 23, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3])
SEGMENT:  tensor([ 8, 18, 23, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 5, 15, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 10, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 13, 18])
-----------------
[TRAIN] steps=1900	loss: 6.7548	nll: 4.1122	kl_b: 13.2194	kl_z: 13.2064	reconst_acc: 0.9334
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 1,  4, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 14, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 13, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 11, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 11, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 16, 22, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 20, 28, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 20, 29, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 18, 28, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 19, 28, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 24, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 24, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([ 6, 13, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3, 12, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  4, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  4, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 13, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 12, 20, 22])
-----------------
[TRAIN] steps=1920	loss: 6.6084	nll: 4.0059	kl_b: 13.0994	kl_z: 12.9248	reconst_acc: 0.9338
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 11, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 9, 12, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 11, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 20, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 15, 21, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 24, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 17, 24, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 22, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 18, 23, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3])
SEGMENT:  tensor([10, 19, 24, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 13, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 13, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 15, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 2,  7, 15, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 9, 14, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 25, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 25, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 18, 28, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 19, 28, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 26, 34])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 18, 26, 34])
-----------------
[TRAIN] steps=1940	loss: 6.6588	nll: 4.0224	kl_b: 13.2808	kl_z: 13.0837	reconst_acc: 0.9338
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 18, 28, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 12, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 24, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 24, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3, 10, 17, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 16, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 11, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 10, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  8, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 15, 20, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 18, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 14, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 15, 21, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5,  9, 17, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([ 6, 14, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 10, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  4, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  5, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 15, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  5, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 13, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  6, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  6, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6,  9, 17, 26])
-----------------
[TRAIN] steps=1960	loss: 6.5452	nll: 3.9344	kl_b: 12.9869	kl_z: 13.1212	reconst_acc: 0.9354
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 12, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 16, 27, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  9, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6,  9, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 13, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 11, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 10, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 13, 20, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3])
SEGMENT:  tensor([ 8, 17, 23, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([12, 15, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 9, 14, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  9, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 15, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 13, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 9, 16, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 12, 17, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 14, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 14, 21, 26])
-----------------
[TRAIN] steps=1980	loss: 6.5039	nll: 3.9092	kl_b: 13.2382	kl_z: 12.7082	reconst_acc: 0.9370
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 16, 22, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 14, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 17, 24, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 15, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 17, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 15, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3])
SEGMENT:  tensor([ 8, 17, 23, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  9, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
SEGMENT:  tensor([ 4, 12, 22, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 5,  8, 15, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 22, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 10, 22, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6,  9, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 15, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 11, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5,  9, 13, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 11, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 13, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 23, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 27, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 19, 28, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
SEGMENT:  tensor([ 8, 17, 25, 27])
-----------------
[TRAIN] steps=2000	loss: 6.4497	nll: 3.8039	kl_b: 13.3610	kl_z: 13.0969	reconst_acc: 0.9384
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 10, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 15, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 5,  9, 15, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 12, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 24, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 17, 25, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 4,  7, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4,  9, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 14, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 21, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 22, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  6, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  6, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 18, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 20, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  8, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  8, 12])
-----------------
[TRAIN] steps=2020	loss: 6.5180	nll: 3.9041	kl_b: 13.2064	kl_z: 12.9328	reconst_acc: 0.9375
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 13, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4,  9, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 9, 14, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3, 13, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 14, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 15, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
SEGMENT:  tensor([ 7, 14, 22, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 5, 10, 19, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  9, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6,  9, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 14, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 24, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 24, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  8, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 9, 14, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 5,  9, 18, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 17, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  8, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  8, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 5,  9, 15, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 27, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 19, 27, 30])
-----------------
[TRAIN] steps=2040	loss: 6.4269	nll: 3.7827	kl_b: 13.1769	kl_z: 13.2649	reconst_acc: 0.9377
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 12, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 15, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 15, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 23, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7,  8, 17, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7,  9, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 4,  7, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 17, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 19, 28, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 2,  5, 11, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 20, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 12, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3, 10, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 7, 15, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 14, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  9, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6,  9, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 11, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 21, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 6, 13, 21, 24])
-----------------
[TRAIN] steps=2060	loss: 6.7601	nll: 3.9047	kl_b: 15.5591	kl_z: 12.9950	reconst_acc: 0.9339
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3])
SEGMENT:  tensor([ 4, 12, 23, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 5, 10, 15, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 19, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 19, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  4, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  5, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 15, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  7, 16, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 17, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 13, 17, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  6, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  6, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 24, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3])
SEGMENT:  tensor([ 9, 15, 25, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([11, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([12, 14, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  7, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  6, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 13, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 14, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 17, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 24, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 23, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 17, 24, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  9, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 16, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 17, 27])
-----------------
[TRAIN] steps=2080	loss: 6.5749	nll: 3.8592	kl_b: 13.9577	kl_z: 13.1992	reconst_acc: 0.9373
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 21, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 14, 21, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 14, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 25, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 25, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 10, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 26, 34])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 18, 26, 34])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1, 11, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  5, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 18, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 17, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 24, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 24, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 17, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 12, 17, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([12, 17, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 20, 28, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 20, 29, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 19, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([12, 20, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 11, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 11, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 15, 20, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 16, 20, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 7, 15, 17, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 16, 19, 25])
-----------------
[TRAIN] steps=2100	loss: 6.4727	nll: 3.7393	kl_b: 14.0906	kl_z: 13.2435	reconst_acc: 0.9410
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 2, 11, 17, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 15, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 21, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 5, 13, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 27, 39])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 28, 39])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 12, 17, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5, 10, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 12, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 17, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  9, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  9, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 18, 28, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 25, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 25, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 17, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 13, 17, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 20, 28, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 20, 29, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 15, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 21, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 14, 21, 32])
-----------------
[TRAIN] steps=2120	loss: 6.2764	nll: 3.6526	kl_b: 13.2701	kl_z: 12.9671	reconst_acc: 0.9405
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 21, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 14, 21, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 10, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 24, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 24, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 15, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 16, 20, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  9, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 15, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 11, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 9, 12, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 15, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 11, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 14, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5,  9, 17, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 4, 13, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  4, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  5, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5,  9, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 11, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([12, 17, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 13, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
SEGMENT:  tensor([ 8, 17, 25, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 21, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 5, 13, 21, 24])
-----------------
[TRAIN] steps=2140	loss: 6.2938	nll: 3.6639	kl_b: 13.1921	kl_z: 13.1064	reconst_acc: 0.9403
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 17, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 1, 10, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 12, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 20, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 2,  5, 11, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 23, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 17, 24, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 15, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3, 13, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3, 10, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([ 8, 15, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  5, 14, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 2,  6, 14, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 14, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 16, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 7, 15, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 1,  4, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 24, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 24, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  8, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  8, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 10, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 8, 11, 19, 24])
-----------------
[TRAIN] steps=2160	loss: 6.2998	nll: 3.6458	kl_b: 13.3204	kl_z: 13.2198	reconst_acc: 0.9389
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3])
SEGMENT:  tensor([ 8, 17, 23, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 24, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 24, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 12, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 24, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 25, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 18, 28, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 19, 28, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 20, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3,  8, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 3,  9, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 23, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 15, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 16, 20, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  9, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 7, 12, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 12, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 13, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 21, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 15, 21, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 12, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 15, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 15, 21])
-----------------
[TRAIN] steps=2180	loss: 6.0530	nll: 3.4469	kl_b: 13.1015	kl_z: 12.9589	reconst_acc: 0.9429
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 12, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 12, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 12, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 15, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 16, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 14, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 18, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 11, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 13, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  6, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  6, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 19, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 19, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 10, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 8, 11, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 18, 23, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3])
SEGMENT:  tensor([10, 19, 24, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 24, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 25, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 27, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 19, 27, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 18, 28, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 23, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 14, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7,  8, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
SEGMENT:  tensor([ 8, 17, 25, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 19, 24, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 17, 22])
-----------------
[TRAIN] steps=2200	loss: 6.1536	nll: 3.4934	kl_b: 13.1271	kl_z: 13.4753	reconst_acc: 0.9437
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 26, 34])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 18, 26, 34])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  6, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 15, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 13, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 14, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 13, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 15, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 14, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 13, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 15, 20, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 16, 21, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 16, 22, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 16, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 12, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 16, 20])
-----------------
[TRAIN] steps=2220	loss: 6.0199	nll: 3.4051	kl_b: 12.9310	kl_z: 13.2163	reconst_acc: 0.9446
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 13, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 11, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 9, 12, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 11, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
SEGMENT:  tensor([ 8, 17, 25, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 15, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 16, 20, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 10, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 19, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 19, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 15, 21, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 17, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 10, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 11, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 11, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 12, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 18, 28, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3])
SEGMENT:  tensor([ 8, 18, 23, 26])
-----------------
[TRAIN] steps=2240	loss: 6.0845	nll: 3.4453	kl_b: 13.3625	kl_z: 13.0298	reconst_acc: 0.9441
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 11, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 14, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 15, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 19, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 4, 13, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 24, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 25, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 16, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 13, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 7, 12, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 18, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 13, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 13, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  9, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 13, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2, 13, 21, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 24, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 11, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 11, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 12, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 23, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 17, 24, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
SEGMENT:  tensor([ 8, 17, 25, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2, 11, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 19, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3,  9, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 18, 23])
-----------------
[TRAIN] steps=2260	loss: 5.9975	nll: 3.3905	kl_b: 13.0207	kl_z: 13.0493	reconst_acc: 0.9450
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 10, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  9, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 11, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 7, 12, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4,  9, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  6, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  6, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 13, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2, 14, 21, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 13, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 16, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 21, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 22, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 27, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 19, 28, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 16, 22, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 10, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  7, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([ 7, 19, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 17, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 23, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 17, 24, 29])
-----------------
[TRAIN] steps=2280	loss: 5.9122	nll: 3.3045	kl_b: 13.0913	kl_z: 12.9852	reconst_acc: 0.9470
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 19, 24, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 20, 28, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 20, 29, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 11, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 7, 12, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 12, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 11, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 9, 12, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 18, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 12, 18, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 18, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 4,  9, 16, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 12, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3,  8, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 1,  4, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7,  9, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 23, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 23, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 17, 24, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 14, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 14, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 1, 10, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 15, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2, 11, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 21, 32, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 21, 32, 35])
-----------------
[TRAIN] steps=2300	loss: 5.9298	nll: 3.3123	kl_b: 13.1405	kl_z: 13.0345	reconst_acc: 0.9457
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3,  9, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 13, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 10, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 26, 34])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 18, 26, 34])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 11, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 15, 20, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 14, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 14, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 10, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 8, 11, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 13, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  4, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  5, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 18, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 10, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  8, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 15, 21, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 24, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3])
SEGMENT:  tensor([ 8, 15, 24, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 15, 20, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 16, 21, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3])
SEGMENT:  tensor([ 8, 17, 23, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  9, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 5, 15, 21, 27])
-----------------
[TRAIN] steps=2320	loss: 5.8075	nll: 3.2234	kl_b: 13.1026	kl_z: 12.7383	reconst_acc: 0.9474
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 18, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
SEGMENT:  tensor([ 8, 17, 25, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7,  9, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  9, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 11, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 21, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 22, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  5, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  6, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 13, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 12, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 5, 15, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 11, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 11, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 22, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 10, 22, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  9, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 15, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 11, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 9, 12, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 15, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 2,  7, 15, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 16, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 16, 23, 30])
-----------------
[TRAIN] steps=2340	loss: 5.8310	nll: 3.2322	kl_b: 12.9624	kl_z: 13.0252	reconst_acc: 0.9478
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 27, 39])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 28, 39])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2, 11, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 2,  6, 11, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 7, 15, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 24, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 24, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 4, 13, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 15, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 24, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 24, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 2,  5, 11, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 13, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 25, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 25, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
SEGMENT:  tensor([ 7, 14, 22, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 13, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  4, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  5, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 24, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 25, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 14, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 10, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 19, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 19, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 15])
-----------------
[TRAIN] steps=2360	loss: 5.9264	nll: 3.2891	kl_b: 13.2805	kl_z: 13.0925	reconst_acc: 0.9463
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 18, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 15, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 22, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 10, 22, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 27, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 19, 28, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 3, 10, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 15, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 16, 20, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 17, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 12, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 15, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 16, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 13, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([10, 17, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 10, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 11, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([12, 17, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 14, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 11, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3])
SEGMENT:  tensor([ 7, 10, 12, 14])
-----------------
[TRAIN] steps=2380	loss: 5.8194	nll: 3.1930	kl_b: 13.0957	kl_z: 13.1686	reconst_acc: 0.9470
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 11, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 4, 10, 15, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3])
SEGMENT:  tensor([ 8, 18, 23, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 11, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 11, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 9, 14, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([10, 14, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 15, 20, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 16, 21, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 16, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 13, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2, 14, 21, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 17, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 21, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 22, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 19, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 19, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 13, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 27, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 19, 28, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 19, 24, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 24, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 24, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 12, 19, 21])
-----------------
[TRAIN] steps=2400	loss: 5.7690	nll: 3.1689	kl_b: 12.9821	kl_z: 13.0190	reconst_acc: 0.9504
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 20, 28, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 20, 29, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 15, 20, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 13, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 25, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 25, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 12, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 5,  8, 15, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 7, 15, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  9, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 2,  6, 11, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7,  8, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([11, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([11, 14, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 18, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 12, 18, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3, 10, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([ 8, 19, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 18, 28, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 19, 28, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 14, 18, 20])
-----------------
[TRAIN] steps=2420	loss: 5.7329	nll: 3.0795	kl_b: 13.3235	kl_z: 13.2105	reconst_acc: 0.9503
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 15, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 8, 15, 21, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 13, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 5, 10, 15, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 11, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([ 8, 19, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 21, 32, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 22, 32, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 27, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 19, 28, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 14, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 1,  4, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 14, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 15, 20, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 16, 21, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 12, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 19, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 14, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 18, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 15, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 12, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 14, 22])
-----------------
[TRAIN] steps=2440	loss: 5.6827	nll: 3.0943	kl_b: 12.8251	kl_z: 13.0590	reconst_acc: 0.9497
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7,  8, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 10, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 10, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 14, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 27, 39])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 28, 39])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 18, 28, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 19, 28, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 16, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 12, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 12, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 2, 11, 17, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 17, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3])
SEGMENT:  tensor([ 8, 17, 23, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 12, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 13, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 10, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 23, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 17, 24, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 15, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 16, 21, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 13, 18])
-----------------
[TRAIN] steps=2460	loss: 5.6618	nll: 3.0412	kl_b: 13.2704	kl_z: 12.9357	reconst_acc: 0.9510
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 17, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([10, 17, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 27, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 19, 28, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 13, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 12, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 12, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 17, 24, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 12, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 26, 34])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 18, 26, 34])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 14, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 7, 15, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 19, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([12, 20, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 16, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 2,  5, 11, 12])
-----------------
[TRAIN] steps=2480	loss: 5.6176	nll: 2.9995	kl_b: 12.8014	kl_z: 13.3805	reconst_acc: 0.9503
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 15, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 23, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  6, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  6, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  9, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6,  9, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 12, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 4, 13, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 15, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 13, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  7, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([ 8, 18, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 24, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 24, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 10, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 13, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 18, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 15, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 15, 20, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 16, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 13, 17, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  6, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 15, 21, 26])
-----------------
[TRAIN] steps=2500	loss: 5.7682	nll: 3.1201	kl_b: 13.3676	kl_z: 13.1127	reconst_acc: 0.9518
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 15, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 17, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 13, 17, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4,  9, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 4,  7, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 25, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 26, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 7, 12, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 5, 12, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 27, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 19, 28, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 18, 23, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3])
SEGMENT:  tensor([10, 19, 24, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 1,  8, 16, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 24, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 25, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 5,  8, 15, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 29, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 29, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 15, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 21, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 22, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 9, 16, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 16, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
SEGMENT:  tensor([ 4, 12, 22, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 15, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 16, 22])
-----------------
[TRAIN] steps=2520	loss: 5.7316	nll: 3.1065	kl_b: 13.0998	kl_z: 13.1519	reconst_acc: 0.9494
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 3, 11, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 2, 12, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 11, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 18, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 15, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([10, 14, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 25, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 25, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([ 8, 15, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 18, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 13, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 24, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 24, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 1,  8, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 12, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 29, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 20, 29, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4,  9, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 12, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 17, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 20, 28, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 9, 20, 29, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 14, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 10, 14, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 14, 19])
-----------------
[TRAIN] steps=2540	loss: 5.9016	nll: 3.2050	kl_b: 14.1841	kl_z: 12.7821	reconst_acc: 0.9491
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([10, 18, 23, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([ 9, 17, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 11, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 12, 17, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 24, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 24, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 12, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 16, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  8, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 15, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 24, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 24, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3,  9, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 14, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([10, 15, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 14, 23, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 16, 29, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 12, 18, 24])
-----------------
[TRAIN] steps=2560	loss: 10.3053	nll: 6.9552	kl_b: 22.6707	kl_z: 10.8303	reconst_acc: 0.8999
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 7, 16, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 10, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1])
SEGMENT:  tensor([ 8, 19, 24, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([ 6, 13, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 18, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 19, 29, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 14, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 11, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1])
SEGMENT:  tensor([ 7, 19, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1])
SEGMENT:  tensor([15, 20, 26, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 12, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4])
SEGMENT:  tensor([20, 20, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1])
SEGMENT:  tensor([ 5, 20, 24, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 18, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 17, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 9, 13, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4])
SEGMENT:  tensor([19, 19, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])
SEGMENT:  tensor([ 8, 21, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2])
SEGMENT:  tensor([14, 17, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        2, 2, 2, 2, 2, 2])
SEGMENT:  tensor([23, 29, 29, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2])
SEGMENT:  tensor([16, 20, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1])
SEGMENT:  tensor([ 6, 18, 27, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1])
SEGMENT:  tensor([10, 17, 26, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 4, 10, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4])
SEGMENT:  tensor([21, 21, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4])
SEGMENT:  tensor([25, 25, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 27, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([18, 27, 30, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([ 8, 16, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 1])
SEGMENT:  tensor([ 8, 26, 27, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1])
SEGMENT:  tensor([ 7, 11, 12, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        2])
SEGMENT:  tensor([23, 24, 24, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1])
SEGMENT:  tensor([ 9, 21, 22, 22])
-----------------
[TRAIN] steps=2580	loss: 11.6147	nll: 7.7520	kl_b: 25.4815	kl_z: 13.1458	reconst_acc: 0.8714
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2])
SEGMENT:  tensor([20, 23, 23, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  7, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([ 8, 19, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5,  9, 16, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([ 6, 14, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 17, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 17, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 10, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 12, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 12, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 27, 39])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 17, 28, 39])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 13, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 16, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 5,  9, 17, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 11, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5, 15, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 15, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 17, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 13, 18, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 11, 16, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 4,  9, 15, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 6, 11, 19, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1])
SEGMENT:  tensor([ 7, 19, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 2, 12, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 10, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 10, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([11, 16, 23, 23])
-----------------
[TRAIN] steps=2600	loss: 7.9667	nll: 5.2214	kl_b: 16.1123	kl_z: 11.3405	reconst_acc: 0.9118
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 6, 17, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([ 7, 16, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 9, 17, 23, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([ 9, 12, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([ 9, 14, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 7, 15, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 27, 39])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 28, 39])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  5, 14, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2])
SEGMENT:  tensor([14, 26, 26, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 13, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 11, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 13, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 7, 18, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 3, 14, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 12, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 14, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])
SEGMENT:  tensor([ 6, 18, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 12, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 9, 12, 15, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 16, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 6, 20, 23, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 13, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 13, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1])
SEGMENT:  tensor([ 5, 15, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 12, 16, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 10, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1])
SEGMENT:  tensor([ 8, 20, 24, 24])
-----------------
[TRAIN] steps=2620	loss: 7.4804	nll: 4.7161	kl_b: 16.2083	kl_z: 11.4355	reconst_acc: 0.9230
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 12, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([10, 17, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 26, 34])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 26, 34])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  5, 14, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1])
SEGMENT:  tensor([ 6, 14, 26, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1])
SEGMENT:  tensor([ 8, 16, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  7, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([ 8, 18, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 11, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 2, 11, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 25, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([10, 19, 26, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 7, 12, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 14, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5, 14, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 12, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 13, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 14, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1])
SEGMENT:  tensor([ 7, 18, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2])
SEGMENT:  tensor([13, 21, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
SEGMENT:  tensor([ 8, 17, 25, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 8, 14, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3])
SEGMENT:  tensor([ 6,  9, 18, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 10, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 22, 32, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 10, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 13, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 14, 17])
-----------------
[TRAIN] steps=2640	loss: 6.7191	nll: 3.9700	kl_b: 15.7501	kl_z: 11.7404	reconst_acc: 0.9352
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 18, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 18, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 24, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3])
SEGMENT:  tensor([ 8, 15, 24, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 12, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  5, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 11, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 12, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 4,  8, 18, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 13, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 12, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 15, 20, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 16, 20, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  9, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 9, 13, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 19, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 14, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 14, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 14, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([ 6, 16, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 15, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 12, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([ 4, 14, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([11, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1])
SEGMENT:  tensor([11, 21, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 12, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 12, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 23, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4])
SEGMENT:  tensor([10, 10, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 21, 32, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 21, 32, 35])
-----------------
[TRAIN] steps=2660	loss: 7.1861	nll: 4.4273	kl_b: 15.0575	kl_z: 12.5304	reconst_acc: 0.9258
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  7, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 11, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 19, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 13, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 4, 12, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 10, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 11, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  4, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  5, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 24, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 24, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1])
SEGMENT:  tensor([ 8, 16, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 19, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1])
SEGMENT:  tensor([12, 19, 26, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 4, 16, 21, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 3,  6, 17, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 13, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 15, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 16, 20, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 18, 23, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 3, 3])
SEGMENT:  tensor([11, 18, 24, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6,  9, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 11, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([12, 18, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 17, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([10, 15, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 14, 20])
-----------------
[TRAIN] steps=2680	loss: 6.7226	nll: 4.1744	kl_b: 13.9515	kl_z: 11.5306	reconst_acc: 0.9313
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 11, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  9, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 29, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 29, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 13, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 13, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 15, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 15, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 16, 20, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 14, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4, 13, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 3,  9, 14, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 24, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3])
SEGMENT:  tensor([ 9, 14, 24, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 12, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  5, 14, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 1,  6, 14, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 13, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 25, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 25, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6,  9, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([10, 16, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 22])
-----------------
[TRAIN] steps=2700	loss: 6.4036	nll: 3.8238	kl_b: 13.8424	kl_z: 11.9556	reconst_acc: 0.9401
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  5, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 16, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 9, 15, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  5, 14, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 1,  5, 14, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 13, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 12, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 10, 14, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2,  6, 10, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 29, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 29, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 27, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 27, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 4, 10, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 14, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 12, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 10, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 11, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 9, 12, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 3, 12, 16, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 17, 23])
-----------------
[TRAIN] steps=2720	loss: 6.1387	nll: 3.5436	kl_b: 13.6788	kl_z: 12.2722	reconst_acc: 0.9437
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 10, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 11, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 14, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
SEGMENT:  tensor([ 8, 16, 25, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 16, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 14, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 15, 20, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 24, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 24, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 13, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 13, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 16, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 25, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 25, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 2, 10, 17, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 14, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 19, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2, 11, 19, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 11, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 21, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 5, 14, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 12, 21])
-----------------
[TRAIN] steps=2740	loss: 5.9305	nll: 3.3617	kl_b: 13.4472	kl_z: 12.2409	reconst_acc: 0.9456
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 14, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 11, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 9, 13, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 15, 20, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  9, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 16, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 11, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 11, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 19, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 25, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 25, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 12, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 13, 17, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  5, 14, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 2,  5, 14, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 18, 27, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 13, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 12, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 12, 22, 22])
-----------------
[TRAIN] steps=2760	loss: 5.9313	nll: 3.3362	kl_b: 13.6142	kl_z: 12.3373	reconst_acc: 0.9464
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 15, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 22, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 22, 33, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 16, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 14, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 5, 10, 14, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 19, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4,  8, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 13, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 11, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([11, 15, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 15, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 19, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([12, 19, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 11, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 14, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 14, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 11, 17, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 13, 18])
-----------------
[TRAIN] steps=2780	loss: 5.7000	nll: 3.0965	kl_b: 13.6291	kl_z: 12.4062	reconst_acc: 0.9508
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 1,  5, 10, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 16, 20, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 14, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 9, 14, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 10, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 29, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 29, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 19, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  6, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 17, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 8, 14, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 24, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 24, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 10, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 19, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 13, 19, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 27, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 27, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 14, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 15, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 15, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 15, 20, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 15, 20, 28])
-----------------
[TRAIN] steps=2800	loss: 5.6583	nll: 3.0811	kl_b: 13.3114	kl_z: 12.4602	reconst_acc: 0.9514
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 10, 16, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 16, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 24, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 24, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 21, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 21, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  7, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 18, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 14, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 15, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 16, 25, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3])
SEGMENT:  tensor([ 8, 16, 25, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([12, 17, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 11, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 12, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 10, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 11, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 27, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 27, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 14, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 22])
-----------------
[TRAIN] steps=2820	loss: 5.5632	nll: 3.0153	kl_b: 13.2718	kl_z: 12.2063	reconst_acc: 0.9510
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7,  9, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 10, 16, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 20, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 17, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 14, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 29, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 29, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 19, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([12, 19, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([12, 17, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([ 9, 16, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 2,  9, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 11, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 11, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 10, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  8, 10, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 20, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 12, 20, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 24, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 24, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 10, 16, 26])
-----------------
[TRAIN] steps=2840	loss: 5.5178	nll: 2.9452	kl_b: 13.2793	kl_z: 12.4465	reconst_acc: 0.9519
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 11, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 7, 12, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 29, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 29, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 8, 15, 20, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 17, 27, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7,  8, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 14, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 22, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3])
SEGMENT:  tensor([ 8, 17, 22, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 9, 14, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 16, 22, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 15, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 15, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 10, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 14, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 15, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 15, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 1,  5, 10, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 12, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 12, 20, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 13, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 16, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  9, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  9, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 11, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 11, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3,  9, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 13, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 13, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 12, 18])
-----------------
[TRAIN] steps=2860	loss: 5.6887	nll: 3.0527	kl_b: 13.4126	kl_z: 12.9475	reconst_acc: 0.9518
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 13, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 13, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 20, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 13, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 11, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 1,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 21, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 17, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 17, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 12, 17, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 18, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 14, 18, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
SEGMENT:  tensor([ 7, 13, 22, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4, 11, 12, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 10, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 11, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  8, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 1,  8, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 18, 27, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 19, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 7, 13, 19, 26])
-----------------
[TRAIN] steps=2880	loss: 5.6580	nll: 3.0869	kl_b: 13.4347	kl_z: 12.2771	reconst_acc: 0.9486
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 13, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 17, 22, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 17, 22, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  6, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 11, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 22, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 17, 22, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([10, 19, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  8, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 14, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 11, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  7, 11, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  7, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1])
SEGMENT:  tensor([ 7, 18, 25, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 15, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  6, 14, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 6, 14, 22, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 15, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 2,  6, 15, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1])
SEGMENT:  tensor([ 8, 13, 19, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 22, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3])
SEGMENT:  tensor([ 4, 11, 22, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  9, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 16, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 2, 11, 16, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 21, 33])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 21, 33])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 16, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 16, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 18, 23])
-----------------
[TRAIN] steps=2900	loss: 5.7047	nll: 3.0683	kl_b: 13.6453	kl_z: 12.7189	reconst_acc: 0.9510
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 17, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 17, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 11, 14, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 11, 14, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 12, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 16, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  5, 14, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 1,  5, 14, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 18, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5, 14, 21, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 13, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 0,  3,  6, 10])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1])
SEGMENT:  tensor([ 3,  6, 10, 10])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 25, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 25, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 16, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([10, 13, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 11, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 11, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  9, 14, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 14, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 13, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 13, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 23, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 16, 23, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 14, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 14, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 16, 27, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 6, 16, 27, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 20, 28, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 20, 28, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 21, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 5, 15, 21, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 15, 18])
-----------------
[TRAIN] steps=2920	loss: 5.3804	nll: 2.8141	kl_b: 13.0286	kl_z: 12.6347	reconst_acc: 0.9532
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 16, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 14, 16, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5,  9, 14, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 18, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  4, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  5, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5, 12, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 12, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2,  6, 10, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 16, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 4, 10, 16, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 21, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 5, 13, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  9, 12, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 2,  9, 12, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 17, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 23, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 23, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  9, 19, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  9, 19, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 18, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 18, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 14, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 14, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 15, 24, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 15, 24, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  8, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([10, 13, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 12, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 16, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 16, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 16, 27])
-----------------
[TRAIN] steps=2940	loss: 5.4680	nll: 2.8809	kl_b: 13.3449	kl_z: 12.5263	reconst_acc: 0.9534
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 2,  9, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 18, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 18, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 19, 21, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([12, 20, 21, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 20, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 20, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 13, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 13, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 22, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 22, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 13, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 13, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 16, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 10, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 10, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 22, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 22, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 18, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4,  9, 18, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 14, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 14, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 10, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 8, 11, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  9, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5, 12, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 12, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  4, 12, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([12, 16, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([12, 17, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 12, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 21, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 14, 21, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 20, 28, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 20, 28, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 12, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 13, 19, 23])
-----------------
[TRAIN] steps=2960	loss: 5.3026	nll: 2.7469	kl_b: 13.0242	kl_z: 12.5320	reconst_acc: 0.9554
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 4, 12, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 13, 20, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 14, 20, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 11, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 11, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 11, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 11, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 17, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5,  9, 17, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 6, 11, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 13, 20, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3])
SEGMENT:  tensor([ 4, 13, 20, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 3, 10, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 2, 12, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4,  9, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 11, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 9, 12, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4,  9, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 11, 17, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 11, 17, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 12, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 19, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 10, 15, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 15, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  4, 12, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  5, 12, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 19, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 13, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 13, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  8, 13, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 13, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 11, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 11, 18, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  9, 14, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 10, 14, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 11, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 11, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 12, 17, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 8, 12, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 29, 35])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 29, 35])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 16, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 16, 27])
-----------------
[TRAIN] steps=2980	loss: 5.3140	nll: 2.7435	kl_b: 13.1335	kl_z: 12.5714	reconst_acc: 0.9566
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 16, 27, 39])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 16, 27, 39])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 12, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 14, 20, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 14, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 15, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 13, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 13, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 12, 18, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 5, 12, 18, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 18, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 12, 18, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5, 13, 21, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3])
SEGMENT:  tensor([ 5, 13, 21, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 18, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 18, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 20, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3])
SEGMENT:  tensor([ 6, 11, 20, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 25, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 25, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 16, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 12, 15, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 12, 16, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 13, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 16, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 16, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 14, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 4,  9, 14, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  9, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 8, 17, 23, 28])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        3, 3, 3, 3, 3])
SEGMENT:  tensor([ 8, 18, 23, 28])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 11, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 12, 20, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 12, 20, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 19, 22, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 9, 19, 22, 27])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 11, 16, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 16, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 11, 15])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  9, 11, 15])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 14, 21, 32])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 14, 21, 32])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6,  8, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6,  9, 13, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 12, 19, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 6, 12, 19, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 6, 13, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  4, 13, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  4, 13, 17])
-----------------
[TRAIN] steps=3000	loss: 5.2811	nll: 2.7131	kl_b: 13.1969	kl_z: 12.4831	reconst_acc: 0.9589
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 15, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 4,  7, 15, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 14, 25, 31])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([10, 14, 25, 31])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 12, 19, 24])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
        3])
SEGMENT:  tensor([ 2, 12, 19, 24])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 9, 13, 18, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  8, 15, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 15, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 14, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 4, 12, 15, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 10, 17, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4, 10, 17, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6, 16, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  6, 16, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  7, 15, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 5,  8, 15, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 5,  8, 12, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 5,  8, 12, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 17])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 12, 17])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7,  9, 11, 14])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 3, 3, 3])
SEGMENT:  tensor([ 7, 10, 11, 14])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 17, 26, 34])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 7, 18, 26, 34])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1,  7, 12, 19])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 1,  7, 12, 19])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  7, 12, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  7, 12, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([10, 13, 17, 20])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([10, 13, 17, 20])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 18, 25, 30])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
        1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 9, 18, 25, 30])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4, 12, 22, 26])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
        3, 3, 3])
SEGMENT:  tensor([ 5, 12, 22, 26])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  6,  8, 18])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  6,  8, 18])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3,  8, 13, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 3,  9, 13, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 4,  7, 16, 22])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 4,  8, 16, 22])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  8, 11, 16])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2,  8, 11, 16])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 3, 12, 18, 23])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 3, 12, 18, 23])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 7, 16, 19, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3,
        3, 3])
SEGMENT:  tensor([ 7, 16, 19, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 6, 13, 21, 25])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
        3, 3])
SEGMENT:  tensor([ 6, 13, 21, 25])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  5,  8, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 1, 1, 3, 3, 3, 3])
SEGMENT:  tensor([ 3,  6,  8, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 9, 13, 18, 21])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3])
SEGMENT:  tensor([ 9, 13, 18, 21])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 1, 14, 20, 29])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
        3, 3, 3, 3, 3, 3])
SEGMENT:  tensor([ 2, 14, 20, 29])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2,  6, 10, 12])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3])
SEGMENT:  tensor([ 2,  6, 10, 12])
-----------------
Type of acts during train torch.int64
Type of use_id during train torch.int64
Use ID:  tensor([ 2, 10, 16, 27])
SUBTASK IS:  [4, 2, 1, 3]
SUBTASK IS:  [4, 2, 1, 3]
Ground truth subtask:  tensor([4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
Decoded subtask:  tensor([4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
SEGMENT:  tensor([ 3, 10, 16, 27])
-----------------
Reaching maximum steps
Training finished, start collecting segments
Accumulated all segments and latents
all z shape (1500, 4, 64)
all sample bs shape (1500, 4)
flat z shape (6000, 64)
Labels shape (1500, 4)
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 35, GT length 35, Lens: 35, actions: 35
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 13, GT length 13, Lens: 13, actions: 13
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 14, GT length 14, Lens: 14, actions: 14
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 38, GT length 38, Lens: 38, actions: 38
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 34, GT length 34, Lens: 34, actions: 34
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 36, GT length 36, Lens: 36, actions: 36
SUBTASK IS:  [4, 2, 1, 3]
Pred length 37, GT length 37, Lens: 37, actions: 37
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 13, GT length 13, Lens: 13, actions: 13
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 37, GT length 37, Lens: 37, actions: 37
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 35, GT length 35, Lens: 35, actions: 35
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 35, GT length 35, Lens: 35, actions: 35
SUBTASK IS:  [4, 2, 1, 3]
Pred length 14, GT length 14, Lens: 14, actions: 14
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 14, GT length 14, Lens: 14, actions: 14
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 34, GT length 34, Lens: 34, actions: 34
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 39, GT length 39, Lens: 39, actions: 39
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 35, GT length 35, Lens: 35, actions: 35
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 36, GT length 36, Lens: 36, actions: 36
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 14, GT length 14, Lens: 14, actions: 14
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 13, GT length 13, Lens: 13, actions: 13
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 38, GT length 38, Lens: 38, actions: 38
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 36, GT length 36, Lens: 36, actions: 36
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 38, GT length 38, Lens: 38, actions: 38
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 34, GT length 34, Lens: 34, actions: 34
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 13, GT length 13, Lens: 13, actions: 13
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 13, GT length 13, Lens: 13, actions: 13
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 35, GT length 35, Lens: 35, actions: 35
SUBTASK IS:  [4, 2, 1, 3]
Pred length 13, GT length 13, Lens: 13, actions: 13
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 34, GT length 34, Lens: 34, actions: 34
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 11, GT length 11, Lens: 11, actions: 11
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 34, GT length 34, Lens: 34, actions: 34
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 38, GT length 38, Lens: 38, actions: 38
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 35, GT length 35, Lens: 35, actions: 35
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 14, GT length 14, Lens: 14, actions: 14
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 36, GT length 36, Lens: 36, actions: 36
SUBTASK IS:  [4, 2, 1, 3]
Pred length 12, GT length 12, Lens: 12, actions: 12
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 14, GT length 14, Lens: 14, actions: 14
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 10, GT length 10, Lens: 10, actions: 10
SUBTASK IS:  [4, 2, 1, 3]
Pred length 12, GT length 12, Lens: 12, actions: 12
SUBTASK IS:  [4, 2, 1, 3]
Pred length 13, GT length 13, Lens: 13, actions: 13
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 12, GT length 12, Lens: 12, actions: 12
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 36, GT length 36, Lens: 36, actions: 36
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 35, GT length 35, Lens: 35, actions: 35
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 35, GT length 35, Lens: 35, actions: 35
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 35, GT length 35, Lens: 35, actions: 35
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 12, GT length 12, Lens: 12, actions: 12
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 38, GT length 38, Lens: 38, actions: 38
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 14, GT length 14, Lens: 14, actions: 14
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 34, GT length 34, Lens: 34, actions: 34
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 12, GT length 12, Lens: 12, actions: 12
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 35, GT length 35, Lens: 35, actions: 35
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 35, GT length 35, Lens: 35, actions: 35
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 13, GT length 13, Lens: 13, actions: 13
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 34, GT length 34, Lens: 34, actions: 34
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 13, GT length 13, Lens: 13, actions: 13
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 14, GT length 14, Lens: 14, actions: 14
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 39, GT length 39, Lens: 39, actions: 39
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 14, GT length 14, Lens: 14, actions: 14
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 14, GT length 14, Lens: 14, actions: 14
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 34, GT length 34, Lens: 34, actions: 34
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 34, GT length 34, Lens: 34, actions: 34
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 40, GT length 40, Lens: 40, actions: 40
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 34, GT length 34, Lens: 34, actions: 34
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 34, GT length 34, Lens: 34, actions: 34
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 34, GT length 34, Lens: 34, actions: 34
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 13, GT length 13, Lens: 13, actions: 13
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 14, GT length 14, Lens: 14, actions: 14
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 36, GT length 36, Lens: 36, actions: 36
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 34, GT length 34, Lens: 34, actions: 34
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 34, GT length 34, Lens: 34, actions: 34
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 13, GT length 13, Lens: 13, actions: 13
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 11, GT length 11, Lens: 11, actions: 11
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 13, GT length 13, Lens: 13, actions: 13
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 32, GT length 32, Lens: 32, actions: 32
SUBTASK IS:  [4, 2, 1, 3]
Pred length 34, GT length 34, Lens: 34, actions: 34
SUBTASK IS:  [4, 2, 1, 3]
Pred length 35, GT length 35, Lens: 35, actions: 35
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 15, GT length 15, Lens: 15, actions: 15
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 40, GT length 40, Lens: 40, actions: 40
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 33, GT length 33, Lens: 33, actions: 33
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 11, GT length 11, Lens: 11, actions: 11
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 36, GT length 36, Lens: 36, actions: 36
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 13, GT length 13, Lens: 13, actions: 13
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 20, GT length 20, Lens: 20, actions: 20
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 19, GT length 19, Lens: 19, actions: 19
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 31, GT length 31, Lens: 31, actions: 31
SUBTASK IS:  [4, 2, 1, 3]
Pred length 17, GT length 17, Lens: 17, actions: 17
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 21, GT length 21, Lens: 21, actions: 21
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 22, GT length 22, Lens: 22, actions: 22
SUBTASK IS:  [4, 2, 1, 3]
Pred length 24, GT length 24, Lens: 24, actions: 24
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 25, GT length 25, Lens: 25, actions: 25
SUBTASK IS:  [4, 2, 1, 3]
Pred length 16, GT length 16, Lens: 16, actions: 16
SUBTASK IS:  [4, 2, 1, 3]
Pred length 26, GT length 26, Lens: 26, actions: 26
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
SUBTASK IS:  [4, 2, 1, 3]
Pred length 27, GT length 27, Lens: 27, actions: 27
SUBTASK IS:  [4, 2, 1, 3]
Pred length 29, GT length 29, Lens: 29, actions: 29
SUBTASK IS:  [4, 2, 1, 3]
Pred length 23, GT length 23, Lens: 23, actions: 23
SUBTASK IS:  [4, 2, 1, 3]
Pred length 30, GT length 30, Lens: 30, actions: 30
SUBTASK IS:  [4, 2, 1, 3]
Pred length 28, GT length 28, Lens: 28, actions: 28
SUBTASK IS:  [4, 2, 1, 3]
Pred length 18, GT length 18, Lens: 18, actions: 18
{'episode': 0, 'length': 27, 'segments': [{'start': 0, 'end': 5, 'latent': array([ 1.31749474e-02,  1.82287525e-02,  3.87836248e-03,  1.29955485e-02,
        1.55999418e-03, -1.89343281e-02,  7.26376101e-03, -6.21954352e-03,
       -4.13840869e-03, -1.19051076e-02,  6.90050423e-03, -2.84159631e-02,
       -2.17208266e-03,  3.91831622e-03, -3.68381478e-02,  3.12503606e-01,
       -8.29024613e-03,  1.21408030e-02, -7.41152838e-03,  6.13129139e-03,
        1.45592690e-02, -9.37881786e-03, -1.01207551e-02,  1.22751594e-02,
        1.29137672e-02,  3.04392949e-02,  1.73896588e-02,  1.43156499e-02,
        3.34652141e-02, -1.11946166e-02,  4.66071256e-03, -1.62115451e-02,
       -1.48074608e-03, -1.32329855e-02,  8.68269801e-03,  3.71615775e-03,
        8.74212384e-03,  2.26664990e-02,  2.28017606e-02,  1.85131058e-02,
        2.42037345e-02,  2.79247668e-02,  8.48806649e-03, -2.19999123e-02,
        8.77613574e-03, -4.99572977e-03, -2.14708149e-02,  3.18485126e-02,
        1.91073157e-02,  7.27170147e-04, -5.29823005e-02,  4.06777859e-03,
        1.73280612e-02, -2.09110919e-02,  2.40733910e+00, -1.00340359e-02,
       -1.66853648e-02, -2.08233371e-02,  3.92161310e-03, -1.43831614e-02,
       -2.14580186e-02,  1.61804222e-02, -1.47130787e-02,  7.26003200e-03],
      dtype=float32), 'label': 1}, {'start': 5, 'end': 11, 'latent': array([-5.29086962e-03, -3.59847210e-03,  2.71144137e-03, -2.87620798e-02,
       -3.29548866e-02,  3.25747952e-03,  9.44469497e-03,  2.13467255e-02,
       -1.02523779e-02,  7.22062588e-03, -2.34870948e-02,  1.17816180e-02,
       -1.60588026e-02,  4.31558490e-03,  1.64170377e-02,  1.14595151e+00,
       -3.13812494e-03,  1.56933963e-02,  8.48904625e-03, -1.60362870e-02,
       -2.14083269e-02, -4.09326050e-03,  6.06534071e-03, -1.04616582e-02,
       -1.62268393e-02,  8.80957395e-03, -1.51733421e-02, -4.36384603e-03,
        2.99484283e-02,  1.82531402e-03,  3.90833169e-02,  4.17640954e-02,
       -3.41870151e-02,  9.76409577e-03, -1.99414380e-02, -2.09881198e-02,
        1.27457604e-02, -1.02304071e-02, -1.38239376e-02,  2.10878216e-02,
       -4.22352329e-02,  1.16081294e-02, -2.88329273e-03, -1.21777523e-02,
       -2.99604684e-02, -9.81095806e-03,  1.78793743e-02,  2.29443088e-02,
        6.31086435e-03, -1.15740327e-02, -1.91621482e-03, -1.30600035e-02,
        5.57250995e-03, -5.95053472e-03, -8.36221933e-01,  1.41099505e-02,
        2.59937439e-02,  1.59587339e-02,  3.55937406e-02, -7.05498736e-04,
        8.39182362e-03, -2.64838003e-02, -1.65539235e-03, -1.68663952e-02],
      dtype=float32), 'label': 3}, {'start': 11, 'end': 21, 'latent': array([ 5.62019832e-02, -2.83194538e-02,  9.11209136e-02, -1.26421452e-04,
        4.56402525e-02,  1.95663944e-02,  3.95937599e-02,  2.84717157e-02,
        3.35267559e-02,  6.44084662e-02,  1.47082955e-02,  9.56219062e-03,
       -5.76197952e-02,  1.89427473e-02, -3.67079712e-02,  7.71826982e-01,
       -1.05894059e-02,  3.15695629e-02,  3.94346975e-02, -6.65621683e-02,
        6.18945807e-03, -1.59361623e-02,  4.00763154e-02, -3.85351479e-04,
        1.35398917e-02,  1.46872848e-02, -5.17916344e-02,  2.41130330e-02,
       -2.74231136e-02, -3.07781957e-02,  1.68040860e-02,  1.49154160e-02,
        3.32841277e-02, -1.53266434e-02,  1.07694045e-02,  1.91328116e-03,
        7.28976727e-03,  2.84435824e-02, -4.89363186e-02, -2.52294540e-02,
       -6.26513921e-03, -1.94928441e-02, -5.11950999e-02,  3.19741853e-02,
        4.52143252e-02,  2.54048742e-02,  5.66806793e-02, -1.14949718e-02,
       -4.19248007e-02,  5.11070304e-02,  9.62095931e-02,  8.04692805e-02,
       -4.98891138e-02,  7.27606937e-04,  9.03846741e-01,  6.26875311e-02,
        1.45740062e-02, -2.87148282e-02,  1.18197650e-02,  5.17092980e-02,
        2.46015526e-02, -2.67283060e-02,  1.42805427e-02, -9.30433720e-03],
      dtype=float32), 'label': 1}, {'start': 21, 'end': 26, 'latent': array([ 7.79047981e-03, -1.20581333e-02, -4.60503250e-03, -4.35848534e-03,
       -1.01863686e-03,  1.54402331e-02, -1.32478941e-02, -1.16618350e-02,
        1.74441695e-04, -2.09812708e-02, -1.52535737e-04,  2.74781063e-02,
       -5.60174882e-03,  4.68952209e-03,  1.05455257e-02, -1.27872896e+00,
       -4.30621952e-03, -6.21729344e-03,  2.13443451e-02, -1.77578256e-02,
       -1.85617879e-02,  1.31153716e-02,  1.09320320e-03,  1.32778734e-02,
       -7.91249052e-03, -1.82328969e-02,  1.41164735e-02,  4.85690311e-03,
       -5.21907210e-03,  1.89759955e-02,  3.68505493e-02,  1.26577113e-02,
        1.28334025e-02,  1.03711355e-02,  2.79030390e-03, -4.22764383e-03,
        1.17603987e-02, -1.03979260e-02,  4.81267646e-03,  9.25042760e-03,
        9.97066312e-03, -1.87026197e-03,  8.78059864e-03,  1.16231721e-02,
        1.93210468e-02,  7.84203038e-03,  2.54832804e-02,  1.68476552e-02,
        1.95566900e-02,  1.02527114e-02, -7.99842179e-04, -1.23536289e-02,
       -1.89223066e-02,  2.73273699e-03, -1.44034004e+00,  1.02328844e-02,
       -4.20898199e-04, -8.85022432e-03, -1.51833892e-03, -1.96123049e-02,
       -2.27545574e-03,  1.30892657e-02,  7.63564557e-03, -1.81764476e-02],
      dtype=float32), 'label': 0}], 'actions': array([0, 0, 0, 0, 3, 4, 3, 1, 1, 1, 1, 4, 3, 0, 0, 2, 2, 2, 2, 2, 1, 4,
       1, 2, 1, 1, 4]), 'predicted_truths': [1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], 'ground_truth': [4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3]}
Saved model and episode data to:  /home/nightless/Desktop/ompn_new/experiment/makebed_asot_ourcode_full_3
Finished collecting segments
Results:
----------------------------------
test_f1_full   0.2662
test_f1_per    0.6973
test_miou_full 0.1540
test_miou_per  0.5244
test_mof_full  0.2670
test_mof_per   0.7336
----------------------------------
Finished evaluating
Task corrects:  [tensor(9.7667), tensor(8.3667), tensor(9.4333), tensor(9.2000), tensor(12.7000), tensor(17.6333), tensor(15.3667), tensor(15.6000), tensor(15.4000), tensor(16.0667), tensor(10.8333), tensor(14.6333), tensor(13.3000), tensor(14.9667), tensor(15.1667), tensor(18.8000), tensor(18.4000), tensor(16.6000), tensor(19.4000), tensor(19.2000), tensor(17.3333), tensor(19.6333), tensor(16.7000), tensor(20.7667), tensor(15.8333), tensor(13.1333), tensor(17.7667), tensor(19.7333), tensor(17.), tensor(16.2000), tensor(15.4000), tensor(19.4333), tensor(14.5333), tensor(15.9667), tensor(15.4667), tensor(19.6333), tensor(16.0333), tensor(21.2000), tensor(18.4333), tensor(15.5000), tensor(16.1667), tensor(19.5000), tensor(18.4333), tensor(19.2000), tensor(14.7667), tensor(20.9667), tensor(17.), tensor(20.8333), tensor(22.0333), tensor(21.4333), tensor(19.9667), tensor(19.9000), tensor(19.4667), tensor(17.4000), tensor(15.5667), tensor(20.1333), tensor(19.8000), tensor(18.2000), tensor(18.5000), tensor(23.2667), tensor(20.8667), tensor(22.0333), tensor(23.5000), tensor(23.0333), tensor(24.5667), tensor(23.2667), tensor(20.7667), tensor(22.6000), tensor(21.8333), tensor(20.6333), tensor(21.2000), tensor(20.9000), tensor(24.6333), tensor(25.0667), tensor(23.6667), tensor(20.2667), tensor(23.4000), tensor(23.1000), tensor(22.2667), tensor(22.2667), tensor(21.8667), tensor(20.6667), tensor(21.7000), tensor(21.8333), tensor(22.6000), tensor(23.3333), tensor(19.7667), tensor(20.9000), tensor(22.3333), tensor(20.7333), tensor(22.9000), tensor(23.2000), tensor(21.3333), tensor(22.1000), tensor(22.0667), tensor(23.4000), tensor(24.4000), tensor(22.), tensor(20.9000), tensor(24.5333), tensor(20.5000), tensor(21.8667), tensor(20.5333), tensor(21.2333), tensor(24.1000), tensor(24.1667), tensor(22.0667), tensor(21.3667), tensor(23.8667), tensor(22.8000), tensor(21.8667), tensor(23.), tensor(22.5000), tensor(21.0333), tensor(23.2333), tensor(22.9667), tensor(22.6333), tensor(23.0333), tensor(22.1000), tensor(22.5000), tensor(22.5333), tensor(21.3000), tensor(23.1000), tensor(22.6667), tensor(22.0667), tensor(22.7000), tensor(23.2333), tensor(22.0667), tensor(10.3667), tensor(16.4333), tensor(14.1333), tensor(16.4667), tensor(20.7000), tensor(20.7667), tensor(23.5667), tensor(22.3667), tensor(23.4333), tensor(23.8333), tensor(20.6667), tensor(23.2000), tensor(22.7333), tensor(23.6333), tensor(22.6000), tensor(22.7667), tensor(20.6667), tensor(23.7333), tensor(23.7667), tensor(25.5333), tensor(23.3000), tensor(23.8000), tensor(22.0667)]
